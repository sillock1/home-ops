---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 2048
        runAsGroup: 2048
        fsGroup: 2048
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          sonarr:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.13.2934@sha256:d871b5816748ecca49e322b905b399d5aaf2ef36fa3ec45179f785f2c5861a41
            envFrom:
              - secretRef:
                  name: sonarr-secret
            env:
              TZ: Europe/London
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__LEVEL: info
              SONARR__LOG__DBENABLED: 'false'
              SONARR__SERVER__PORT: &containerPort 8080
              SONARR__UPDATE__BRANCH: develop
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 500Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *containerPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: &servicePort 80
            targetPort: *containerPort
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *servicePort
    persistence:
      config:
        existingClaim: sonarr
      cache:
        existingClaim: sonarr-cache
        globalMounts:
          - path: /config/MediaCover
      media:
        type: nfs
        server: nas.pill.ac
        path: /mnt/Pool/media
        globalMounts:
          - path: /media
      pushover-notify:
        type: configMap
        name: sonarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
      tmp:
        type: emptyDir
