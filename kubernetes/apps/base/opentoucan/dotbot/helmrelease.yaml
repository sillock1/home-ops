---
# yaml-language-server: $schema=https://kubernetes.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dotbot
spec:
  chartRef:
    kind: OCIRepository
    name: *app
  interval: 1h
  values:
    controllers:
      migration:
        type: job
        job:
          backoffLimit: 5
          parallelism: 1
          ttlSecondsAfterFinished: 3600
        containers:
          init:
            image:
              repository: ghcr.io/opentoucan/dotbot.migrator
              tag: 3.4.2@sha256:c738d456c1fb20299f78e083a26a1ee98811627125e1294d21a743449ce7ad3e
            envFrom:
              - secretRef:
                  name: dotbot-migrator-secret
            env:
              - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
                value: /cache
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 512Mi
        pod:
          restartPolicy: Never
      dotbot:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/opentoucan/dotbot.api
              tag: 3.4.2@sha256:82305996030fd687df6edd87cea49072255e7a288fb7b8de209d1daed0952663
            envFrom:
              - secretRef:
                  name: dotbot-secret
            env:
              - name: RabbitMQ__Endpoint
                value: rabbitmq.broker.svc.cluster.local
              - name: RabbitMQ__Port
                value: 5672
              - name: MoturUrl
                value: http://motur.opentoucan.svc.cluster.local
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 512Mi
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &containerPort 8080
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
    service:
      dotbot:
        controller: dotbot
        ports:
          http:
            port: &servicePort 80
            targetPort: *containerPort
    route:
      dotbot:
        hostnames:
          - "{{ .Release.Name }}.${DOMAIN}"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *servicePort
            matches:
              - path:
                  type: PathPrefix
                  value: /interactions
              - path:
                  type: PathPrefix
                  value: /health
    persistence:
      cache:
        type: emptyDir
        advancedMounts:
          migration:
            init:
              - path: /cache
                subPath: cache
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2048
        runAsGroup: 2048
        fsGroup: 2048
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    serviceMonitor:
      dotbot:
        serviceName: *app
        endpoints:
          - path: /metrics
            scheme: http
            port: http
            interval: 1m
            scrapeTimeout: 30s
