---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: otel-daemonset
spec:
  interval: 15m
  chart:
    spec:
      chart: opentelemetry-collector
      version: 0.90.1
      sourceRef:
        kind: HelmRepository
        name: opentelemetry-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    mode: daemonset
    annotations:
      configmap.reloader.stakater.com/reload: otel-collector-opentelemetry-collector-agent
    image:
      repository: otel/opentelemetry-collector-contrib
    presets:
      # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines
      kubernetesAttributes:
        enabled: true
      # enables the kubeletstatsreceiver and adds it to the metrics pipelines
      kubeletMetrics:
        enabled: true
      # Enables the filelogreceiver and adds it to the logs pipelines
      logsCollection:
        enabled: true
      hostMetrics:
        enabled: true
    config:
      extensions:
        health_check: {}
        memory_ballast:
          size_in_percentage: 40
      processors:
        batch: {}
        memory_limiter:
          check_interval: 5s
          limit_percentage: 80
          spike_limit_percentage: 25
      receivers:
        # prometheus:
        #   config:
        #     global:
        #       scrape_interval: 15s # Adjust this interval as needed
        #     scrape_configs:
        #       - job_name: 'prometheus'
        #         static_configs:
        #           - targets: ['kube-prometheus-stack-prometheus:9090'] # Adjust the Prometheus address and port
        # Data sources: traces, metrics, logs
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
      exporters:
        # Data sources: traces, metrics, logs
        # NOTE: Prior to v0.86.0 use `logging` instead of `debug`
        debug:
          verbosity: detailed
        # Data sources: traces, metrics, logs
        # otlp/trace:
        #   endpoint: tempo-distributor:4317
        #   tls:
        #     insecure: true
        otlphttp/log:
          endpoint: http://loki-backend-headless:3100/otlp
        prometheusremotewrite:
          endpoint: http://thanos-receive:19291/api/v1/receive
      service:
        pipelines:
          # traces:
          #   receivers: [ otlp ]
          #   processors: [ memory_limiter, batch ]
          #   exporters: [ otlp/trace, debug ]
          metrics:
            receivers: [otlp]
            processors: [memory_limiter, batch]
            exporters: [prometheusremotewrite, debug]
          logs:
            receivers: [otlp]
            processors: [memory_limiter, batch]
            exporters: [otlphttp/log, debug]
    service:
      enabled: true
      type: ClusterIP
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: otelcol-deployment
spec:
  interval: 15m
  chart:
    spec:
      chart: opentelemetry-collector
      version: 0.90.1
      sourceRef:
        kind: HelmRepository
        name: opentelemetry-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    mode: deployment
    replicaCount: 1
    annotations:
      configmap.reloader.stakater.com/reload: otel-collector-opentelemetry-collector-agent
    image:
      repository: otel/opentelemetry-collector-contrib
    presets:
      # enables the k8sclusterreceiver and adds it to the metrics pipelines
      clusterMetrics:
        enabled: true
      # enables the k8sobjectsreceiver to collect events only and adds it to the logs pipelines
      kubernetesEvents:
        enabled: true
    config:
      extensions:
        health_check: {}
        memory_ballast:
          size_in_percentage: 40
      processors:
        batch: {}
        memory_limiter:
          check_interval: 5s
          limit_percentage: 80
          spike_limit_percentage: 25
      receivers:
        # prometheus:
        #   config:
        #     global:
        #       scrape_interval: 15s # Adjust this interval as needed
        #     scrape_configs:
        #       - job_name: 'prometheus'
        #         static_configs:
        #           - targets: ['kube-prometheus-stack-prometheus:9090'] # Adjust the Prometheus address and port
        # Data sources: traces, metrics, logs
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
        zipkin:
          endpoint: 0.0.0.0:9411
      exporters:
        # Data sources: traces, metrics, logs
        # NOTE: Prior to v0.86.0 use `logging` instead of `debug`
        debug:
          verbosity: detailed
        # Data sources: traces, metrics, logs
        # otlp/trace:
        #   endpoint: tempo-distributor.trace.svc.cluster.local:4317
        #   tls:
        #     insecure: true
        # Data sources: traces, metrics
        otlphttp/log:
          endpoint: http://loki-backend-headless:3100/otlp
        # Data sources: metrics
        prometheusremotewrite:
          endpoint: http://thanos-receive:19291/api/v1/receive
      service:
        pipelines:
          metrics:
            receivers: [otlp]
            processors: [memory_limiter, batch]
            exporters: [prometheusremotewrite, debug]
          logs:
            receivers: [otlp]
            processors: [memory_limiter, batch]
            exporters: [otlphttp/log, debug]
    service:
      enabled: true
      type: ClusterIP
