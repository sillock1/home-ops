---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugins-gpu
      namespace: system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: system
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.32.4.7195-7c8f9d3b6@sha256:39c4ad71d92790d54b2d14be5fdabca940591ab2b9f8291d02653cd4f80d9d4f
    env:
      TZ: Europe/London
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: "10.45.0.20"
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: &host plex.sillock.io
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 105, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 30Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: nas.pill.ac
        path: /mnt/Pool/media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 8000Mi
