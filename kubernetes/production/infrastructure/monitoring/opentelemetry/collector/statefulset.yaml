apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: statefulset
spec:
  mode: statefulset
  targetAllocator:
    enabled: true
    prometheusCR:
      enabled: true
  resources:
    requests:
      cpu: 5m
      memory: 50Mi
    limits:
      cpu: 500m
      memory: 1G
  securityContext:
    runAsUser: 0
  config: |
    receivers:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:
            - targets: [ '0.0.0.0:8888' ]
            metric_relabel_configs:
            - action: labeldrop
              regex: (id|name)
            - action: labelmap
              regex: label_(.+)
    processors:
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
    exporters:
      prometheusremotewrite:
        endpoint: http://thanos-receive:19291/api/v1/receive
        resource_to_telemetry_conversion:
          enabled: true
        external_labels:
          exporter: opentelemetry
      prometheus:
        endpoint: "0.0.0.0:9090"
        send_timestamps: true
        metric_expiration: 180m
        enable_open_metrics: true
        add_metric_suffixes: false
        resource_to_telemetry_conversion:
          enabled: true
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    service:
      telemetry:
        logs:
          level: "debug"
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        metrics:
          exporters:
          - prometheusremotewrite
          processors:
          - memory_limiter
          receivers:
          - prometheus
