apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: gateway
spec:
  mode: deployment
  replicas: 1
  volumes:
    - name: hostfs
      hostPath:
        path: /
    - name: varlogpods
      hostPath:
        path: /var/log/pods
  volumeMounts:
    - name: hostfs
      mountPath: /hostfs
      readOnly: true
      mountPropagation: HostToContainer
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
  env:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
  resources:
    requests:
      cpu: 5m
      memory: 50Mi
    limits:
      cpu: 1000m
      memory: 500Mi
  config: |
    exporters:
      logging:
      loki:
        endpoint: http://loki-write:3100/loki/api/v1/push
      prometheusremotewrite:
        endpoint: http://kube-prometheus-stack-prometheus:9090/api/v1/write
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    processors:
      batch: {}
      k8sattributes:
        auth_type: 'serviceAccount'
        extract:
          metadata: # extracted from the pod
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.start_time
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.node.name
          annotations:
            # Extracts the value of a pod annotation with key `annotation-one` and inserts it as a resource attribute with key `a1`
            - tag_name: a1
              key: annotation-one
              from: pod
            # Extracts the value of a namespaces annotation with key `annotation-two` with regexp and inserts it as a resource  with key `a2`
            - tag_name: a2
              key: annotation-two
              regex: field=(?P<value>.+)
              from: namespace
          labels:
            # Extracts the value of a namespaces label with key `label1` and inserts it as a resource attribute with key `l1`
            - tag_name: l1
              key: label1
              from: namespace
            # Extracts the value of a pod label with key `label2` with regexp and inserts it as a resource attribute with key `l2`
            - tag_name: l2
              key: label2
              regex: field=(?P<value>.+)
              from: pod
        pod_association: # How to associate the data to a pod (order matters)
          - sources: # First try to use the value of the resource attribute k8s.pod.ip
              - from: resource_attribute
                name: k8s.pod.ip
          - sources: # Then try to use the value of the resource attribute k8s.pod.uid
              - from: resource_attribute
                name: k8s.pod.uid
          - sources: # If neither of those work, use the request's connection to get the pod IP.
              - from: connection
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
      attributes:
        actions:
          - action: insert
            key: loki.attribute.labels
            value: log.file.name, event.domain, service.name
          - action: insert
            key: loki.format
            value: logfmt
          - action: insert
            key: loki.resource.labels
            value: pod, namespace, container, cluster, filename, service.name
    receivers:
      k8s_cluster:
        auth_type: serviceAccount
        node_conditions_to_report:
          - Ready
          - MemoryPressure
        allocatable_types_to_report:
          - cpu
          - memory
      k8sobjects:
        auth_type: serviceAccount
        objects:
          - name: pods
            mode: pull
            interval: 15m
          - name: events
            mode: watch
            group: events.k8s.io
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        logs:
          exporters:
          - logging
          - loki
          processors:
          - k8sattributes
          - memory_limiter
          - batch
          - attributes
          receivers:
          - k8sobjects
        metrics:
          exporters:
          - prometheusremotewrite
          processors:
          - k8sattributes
          - memory_limiter
          - batch
          receivers:
          - k8s_cluster
      telemetry:
        metrics:
          address: $${MY_POD_IP}:8888
