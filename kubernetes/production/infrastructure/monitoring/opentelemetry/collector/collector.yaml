apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: my-collector
spec:
  mode: daemonset
  hostNetwork: true
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      hostmetrics:
        root_path: /
        collection_interval: 10s
        scrapers:
          cpu:
          load:
          memory:
          disk:
          filesystem:
          network:
      kubeletstats:
        collection_interval: 10s
        auth_type: none
        endpoint: '10.5.0.2:10250'
        insecure_skip_verify: true
        metric_groups:
          - node
          - pod
          - container
      filelog:
        include:
          - /var/log/pods/*/*/*.log
        exclude:
          # Exclude logs from all containers named otel-collector
          - /var/log/pods/*/otel-collector/*.log
        start_at: beginning
        include_file_path: true
        include_file_name: false

    processors:
      attributes:
        actions:
          - action: insert
            key: loki.attribute.labels
            value: log.file.name

    exporters:
      logging:
        loglevel: debug
      # Logs
      loki:
        endpoint: http://loki:3100/loki/api/v1/push
      # Metrics
      prometheusremotewrite:
        endpoint: http://kube-prometheus-stack-prometheus:9090/api/v1/write
      # Traces
      jaeger:
        endpoint: http://jaeger-collector:14250
        tls:
          insecure: true

    service:
      pipelines:
        logs:
          receivers: [filelog,otlp]
          exporters: [logging,loki]
        metrics:
          receivers: [hostmetrics,kubeletstats,otlp]
          exporters: [prometheusremotewrite]
        traces:
          receivers: [otlp]
          exporters: [jaeger]
