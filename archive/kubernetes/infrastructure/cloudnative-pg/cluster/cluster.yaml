---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: database
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:14.9-3
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cnpg-amalthea/
      endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
      serverName: &currentCluster amalthea
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster adrastea
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: s3://cnpg-adrastea/
  #       endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.r2.cloudflarestorage.com
  #       s3Credentials:
  #         accessKeyId:
  #           name: cloudnative-pg-secret
  #           key: aws-access-key-id
  #         secretAccessKey:
  #           name: cloudnative-pg-secret
  #           key: aws-secret-access-key
