---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Flux Helmrepository Sync

on:
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-job:
    name: Helm Repo Sync - Pre-Job
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
      all_changed_and_modified_files: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Get Changed Files
        id: changed-files
        uses: JJGadgets/tj-actions-changed-files@9200e69727eb73eb060652b19946b8a2fdfb654b
        with:
          files: kubernetes/**/helmrelease.yaml

  extract:
    if: ${{ needs.pre-job.outputs.any_changed == 'true' }}
    name: Helm Repo Sync - Extract Helm Repos
    needs: pre-job
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.extract.outputs.repos }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Extract Repos
        id: extract
        env:
          FILTER: '[.spec.chart.spec.sourceRef] | map_values("\(.namespace),\(.name)") | unique'
        run: |
          repos=$(yq --indent 0 --output-format json eval-all "${FILTER}" ${{ needs.pre-job.outputs.all_changed_and_modified_files }})
          echo "repos=${repos}" >> $GITHUB_OUTPUT

          echo '## Helm Repos' >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          echo $repos | jq >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  sync:
    name: Helm Repo Sync - Sync Helm Repos
    needs: ["pre-job", "extract"]
    runs-on: home-ops-runner
    if: ${{ needs.pre-job.outputs.any_changed == 'true' && needs.extract.outputs.repos != '[]' }}
    strategy:
      matrix:
        repos: ${{ fromJSON(needs.extract.outputs.repos) }}
        cluster: ["main"]
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Configure 1password
        uses: 1password/load-secrets-action/configure@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0 # v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN}}

      - name: Get Secrets
        uses: 1password/load-secrets-action@581a835fb51b8e7ec56b71cf2ffddd7e68bb25e0 # v2
        with:
          export-env: true
        env:
          KUBECONFIG_BASE64: op://kubernetes-${{ env.cluster }}/kubernetes/KUBECONFIG_BASE64

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@784a1a4a994315802b7d8e2084e116e783d157be # v1.2.4
        with:
          encodedString: ${{ env.KUBECONFIG_BASE64 }}
          fileName: kubeconfig

      - name: Install flux
        run: curl -fsSL https://fluxcd.io/install.sh | bash

      - name: Sync Helm Repos
        continue-on-error: true
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          jq --raw-output '.[] | split(",") | "\(.[0]) \(.[1])"' <<< '${{ needs.extract.outputs.repos }}' \
              | xargs -l bash -c 'flux --context ${{ matrix.cluster }} --namespace $0 reconcile source helm $1'

  status:
    if: ${{ always() }}
    name: Helm Repo Sync - Success
    needs: sync
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
